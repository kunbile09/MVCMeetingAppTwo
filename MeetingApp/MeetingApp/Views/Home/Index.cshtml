@model IPagedList<MeetingApp.DAL.Employee>
@using MeetingApp.Models
@using PagedList.Mvc;
@using PagedList;
@{
    ViewBag.Title = "Home Page";
}
@section Scripts{
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>

    <script type="text/javascript">

        function ClearMeetingDetails() {
            $('#meetingDetails').replaceWith(' <div id="meetingDetails"></div> ');
        }

    </script>
}

@{
    var employee = Model.FirstOrDefault(x => x.Email == User.Identity.Name);
    
}

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <div class="row">
                <div class="col-md-8">
                    <div class="panel panel-success">
                        <div class="panel-heading">
                            <h3 class="panel-title text-center">Your Meetings</h3>
                        </div>
                        <div class="panel-body">
                            <table class="table table-striped table-hover ">
                                <thead>
                                <tr>
                                    <th>Topic</th>
                                    <th>Date</th>
                                </tr>
                                </thead>
                                <tbody>
                                @if (employee != null)
                                {
                                    if (employee.Meeting_Employee.Count > 0)
                                    {
                                        foreach (var meeting in employee.Meeting_Employee.Where(x => x.Employee_Id == employee.Id).Select(x => x.Meeting).ToList())
                                        {
                                            <tr>
                                                <td>
                                                    @Ajax.ActionLink(meeting.Topic, "MeetingDetails", "Meeting", new {meetingId = meeting.Id},
                                                        new AjaxOptions
                                                        {
                                                            HttpMethod = "GET", // HttpMethod to use, GET or POST
                                                            UpdateTargetId = "yourMeetingDetails", // ID of the HTML element to update
                                                            InsertionMode = InsertionMode.Replace // Replace the existing contents
                                                        })
                                                </td>
                                                <td>@meeting.Meeting_Date.ToShortDateString()</td>
                                            </tr>
                                        }
                                    }
                                    else
                                    {
                                        <div class="alert alert-dismissible alert-danger">
                                            <button type="button" class="close" data-dismiss="alert">&times;</button>
                                            <strong>Hey @employee.Email, </strong> No meetings found for for you.
                                        </div>
                                    }
                                }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div id="yourMeetingDetails">

                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-12">
            <div class="panel panel-primary">
                <div class="panel-heading">
                    <h3 class="panel-title text-center">The Rest Of Employees Meetings</h3>
                </div>
                <div class="panel-body">
                    <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
                        @foreach (var emp in Model)
                        {

                            var empmeetings = new EmployeeMeetings()
                            {
                                EmployeeId = emp.Id,
                                Meetings = emp.Meeting_Employee.Where(x => x.Employee_Id == emp.Id).Select(x => x.Meeting).ToList()

                            };
                            <div class="panel panel-default">
                                <div class="panel-heading" role="tab" id="@emp.Email">
                                    <h4 class="panel-title">
                                        <a role="button" data-toggle="collapse" data-parent="#accordion" href="#@emp.Id" aria-expanded="False" aria-controls="collapseOne">
                                            @emp.Email
                                        </a>
                                    </h4>
                                </div>
                                <div id="@emp.Id" class="panel-collapse collapse" role="tabpanel" aria-labelledby="@emp.Email">
                                    <div class="panel-body">
                                        <div class="row">
                                            <div class="col-md-8">
                                                @Html.Partial("EmployeeMeetings", empmeetings)
                                            </div>
                                            <div class="col-md-4">
                                                @{ string meetingDetailsId = "meetingDetails" + emp.Id;}
                                                <div id="@meetingDetailsId">

                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }

                    </div>
                </div>
                <div class="text-center">
                    @Html.PagedListPager(Model, page => Url.Action("Index", new {page}), new PagedListRenderOptions() {Display = PagedListDisplayMode.IfNeeded})
                </div>

            </div>
        </div>
    </div>


</div>
